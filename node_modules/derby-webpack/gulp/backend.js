// Generated by CoffeeScript 1.9.3
(function() {
  var WebpackDevServer, _, first, fs, gulp, nodemon, path, webpack;

  gulp = require('gulp');

  webpack = require('webpack');

  path = require('path');

  fs = require('fs');

  _ = require('lodash');

  WebpackDevServer = require('webpack-dev-server');

  nodemon = require('nodemon');

  first = true;

  module.exports = function(options) {
    var base, config, nodeModules;
    base = require('./base')(options);
    nodeModules = {};
    fs.readdirSync(options.dirname + '/node_modules').filter(function(name) {
      return name !== '.bin' && !/^dm-/.test(name) && !/^d-/.test(name);
    }).forEach(function(mod) {
      return nodeModules[mod] = 'commonjs ' + mod;
    });
    config = base.config({
      entry: [].concat(options.backend.entry || [options.dirname + '/server']),
      target: 'node',
      output: {
        path: options.dirname + '/build',
        filename: 'backend.js'
      },
      node: {
        __dirname: true,
        __filename: true
      },
      externals: nodeModules,
      recordsPath: options.dirname + '/build/_records',
      plugins: [new webpack.NormalModuleReplacementPlugin(/\.(styl|css)$/, __dirname + '/../node_modules/node-noop')]
    });
    gulp.task('backend-build', function(done) {
      config.plugins = [
        new webpack.optimize.UglifyJsPlugin({
          compress: {
            warnings: false
          }
        })
      ].concat(config.plugins || []);
      return webpack(config).run(base.onBuild(done));
    });
    return gulp.task('backend-watch', function(done) {
      var firedDone;
      firedDone = false;
      return webpack(config).watch(100, function(err, stats) {
        if (!firedDone) {
          firedDone = true;
          done();
        }
        return setTimeout(function() {
          if (first) {
            return first = false;
          } else {
            return nodemon.restart();
          }
        }, options.restartTimeout || 0);
      });
    });
  };

}).call(this);
