// Generated by CoffeeScript 1.7.1
(function() {
  var dotty, pathFor, placeholderRegex,
    __slice = [].slice;

  dotty = require('dotty');

  placeholderRegex = /((?:\:[\w-\?\(\)\|]+)|(?:\*))\/?/;

  pathFor = function() {
    var action, controller, index, option, options, path, placeholder, route, routes, sections, _i, _len, _ref, _ref1, _ref2;
    routes = arguments[0], path = arguments[1], options = 3 <= arguments.length ? __slice.call(arguments, 2) : [];
    if (path == null) {
      throw new Error("No controller:action provided");
    }
    sections = path.split(':');
    if (sections.length <= 2) {
      controller = sections[0], action = sections[1];
      if (action == null) {
        action = 'index';
      }
      route = (_ref = routes[controller]) != null ? _ref[action] : void 0;
    } else {
      route = dotty.get(routes, sections);
    }
    if (!route) {
      throw new Error("No action found for '" + path + "'");
    }
    for (index = _i = 0, _len = options.length; _i < _len; index = ++_i) {
      option = options[index];
      placeholder = (_ref1 = route.match(placeholderRegex)) != null ? _ref1[1] : void 0;
      if (!placeholder) {
        throw new Error('Url doesn\'t contain a :-placeholder for passed value');
      }
      route = route.replace(placeholder, option);
    }
    while (placeholder = (_ref2 = route.match(placeholderRegex)) != null ? _ref2[1] : void 0) {
      if (placeholder.indexOf('?') === -1) {
        throw new Error('No value specified for required placeholder ' + placeholder);
      }
      if (route.indexOf(placeholder) === route.indexOf(placeholder + '/')) {
        placeholder += '/';
      }
      route = route.replace(placeholder, '');
    }
    return route;
  };

  module.exports.pathFor = pathFor;

}).call(this);
