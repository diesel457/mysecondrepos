// Generated by CoffeeScript 1.10.0
(function() {
  var EventEmitter, _, conf, derbyServer, path;

  _ = require('lodash');

  path = require('path');

  conf = require('nconf');

  EventEmitter = require('events').EventEmitter;

  derbyServer = {
    init: function(dirname) {
      this.dirname = dirname;
      if (this.dirname == null) {
        this.dirname = path.dirname(path.dirname(__dirname));
      }
      require('./nconf')(this.dirname);
      process.env['NODE_ENV'] = conf.get('NODE_ENV');
      return this;
    },
    run: function(options, cb) {
      var absolutePaths;
      if (options == null) {
        options = {};
      }
      if (!this.dirname) {
        throw new Error('You must run .init() first!');
      }
      options.dirname = this.dirname;
      _.defaults(options, {
        appPath: false,
        appsPath: './apps',
        publicPath: './public',
        loginUrl: '/login',
        paymentUrl: '/payment',
        websockets: true
      });
      if (!_.isArray(options.appsPath)) {
        options.appsPath = [options.appsPath];
      }
      absolutePaths = [];
      options.appsPath.forEach(function(appsPath) {
        return absolutePaths.push(path.resolve(options.dirname, appsPath));
      });
      options.appsPath = absolutePaths;
      if (options.appPath) {
        if (!_.isArray(options.appPath)) {
          options.appPath = [options.appPath];
        }
        absolutePaths = [];
        options.appPath.forEach(function(appPath) {
          return absolutePaths.push(path.resolve(options.dirname, appPath));
        });
        options.appPath = absolutePaths;
      }
      options.publicPath = path.resolve(options.dirname, options.publicPath);
      options.ee = new EventEmitter();
      if (typeof cb === "function") {
        cb(options.ee, options);
      }
      return require('./server')(options);
    }
  };

  module.exports = derbyServer;

}).call(this);
