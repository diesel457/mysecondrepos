path = require 'path'
derby = require 'derby'
_ = require 'lodash'

module.exports = (options) ->
  errorApp = derby.createApp()
  errorApp.serverUse module, 'derby-jade'
  errorApp.serverUse module, 'derby-stylus'
  errorApp.loadViews __dirname + '/views'
  errorApp.loadStyles __dirname + '/styles'

  return (err, req, res, next) ->
    return next() unless err?

    console.log (if err.stack then err.stack else err)

    ## Customize error handling here ##
    message = err.message || err.toString()
    status = parseInt message
    status = if 400 <= status < 600 then status else 500

    page = errorApp.createPage(req, res, next)

    if status is 403 or status is 404 or status is 500
      if status is 403 and not req.session.loggedIn
        res.cookie 'redirectWhen', 'loggedIn', { maxAge: 1000 * 3600 }
        res.cookie 'redirect', req.url, { maxAge: 1000 * 3600 }
        res.redirect options.loginUrl
      else if status is 403 and /Not paid/i.test(err) and not req.session.paid
        res.cookie 'redirectWhen', 'paid', { maxAge: 1000 * 3600 }
        res.cookie 'redirect', req.url, { maxAge: 1000 * 3600 }
        res.redirect options.paymentUrl
      else
        page.renderStatic status, status.toString()
    else
      res.send status
