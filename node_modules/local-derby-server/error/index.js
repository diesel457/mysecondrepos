// Generated by CoffeeScript 1.10.0
(function() {
  var _, derby, path;

  path = require('path');

  derby = require('derby');

  _ = require('lodash');

  module.exports = function(options) {
    var errorApp;
    errorApp = derby.createApp();
    errorApp.serverUse(module, 'derby-jade');
    errorApp.serverUse(module, 'derby-stylus');
    errorApp.loadViews(__dirname + '/views');
    errorApp.loadStyles(__dirname + '/styles');
    return function(err, req, res, next) {
      var message, page, status;
      if (err == null) {
        return next();
      }
      console.log((err.stack ? err.stack : err));
      message = err.message || err.toString();
      status = parseInt(message);
      status = (400 <= status && status < 600) ? status : 500;
      page = errorApp.createPage(req, res, next);
      if (status === 403 || status === 404 || status === 500) {
        if (status === 403 && !req.session.loggedIn) {
          res.cookie('redirectWhen', 'loggedIn', {
            maxAge: 1000 * 3600
          });
          res.cookie('redirect', req.url, {
            maxAge: 1000 * 3600
          });
          return res.redirect(options.loginUrl);
        } else if (status === 403 && /Not paid/i.test(err) && !req.session.paid) {
          res.cookie('redirectWhen', 'paid', {
            maxAge: 1000 * 3600
          });
          res.cookie('redirect', req.url, {
            maxAge: 1000 * 3600
          });
          return res.redirect(options.paymentUrl);
        } else {
          return page.renderStatic(status, status.toString());
        }
      } else {
        return res.send(status);
      }
    };
  };

}).call(this);
