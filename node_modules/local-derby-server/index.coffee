_ = require 'lodash'
path = require 'path'
conf = require 'nconf'
EventEmitter = require('events').EventEmitter


derbyServer =

  init: (@dirname) ->
    @dirname ?= path.dirname path.dirname __dirname
    require('./nconf') @dirname
    process.env['NODE_ENV'] = conf.get 'NODE_ENV'
    this

  run: (options = {}, cb) ->
    throw new Error 'You must run .init() first!' unless @dirname
    options.dirname = @dirname
    _.defaults options,
      appPath: false
      appsPath: './apps'
      publicPath: './public'
      loginUrl: '/login'
      paymentUrl: '/payment'
      #error: require('./error')
      websockets: true

    # Resolve all paths to be absolute from being relative to the project root

    options.appsPath = [options.appsPath] unless _.isArray(options.appsPath)
    absolutePaths = []
    options.appsPath.forEach (appsPath) ->
      absolutePaths.push path.resolve options.dirname, appsPath
    options.appsPath = absolutePaths

    if options.appPath
      options.appPath = [options.appPath] unless _.isArray(options.appPath)
      absolutePaths = []
      options.appPath.forEach (appPath) ->
        absolutePaths.push path.resolve options.dirname, appPath
      options.appPath = absolutePaths

    options.publicPath = path.resolve options.dirname, options.publicPath

    # Run cb to setup additional options that require initialized nconf
    # and do event handling

    options.ee = new EventEmitter()
    cb? options.ee, options

    # Run app
    require('./server') options


module.exports = derbyServer
