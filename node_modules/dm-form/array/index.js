// Generated by CoffeeScript 1.8.0
(function() {
  var FormArray, _,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  _ = require('lodash');

  module.exports = FormArray = (function(_super) {
    __extends(FormArray, _super);

    function FormArray() {
      return FormArray.__super__.constructor.apply(this, arguments);
    }

    FormArray.prototype.view = __dirname;

    FormArray.prototype.name = 'dm-form:array';

    FormArray.prototype.init = function() {
      var _ref;
      FormArray.__super__.init.apply(this, arguments);
      if (!(this.getAttribute('items') || ((_ref = this.getAttribute('meta')) != null ? _ref.items : void 0))) {
        return console.error("Array meta error: No 'items' provided for array " + ("'" + (this.model.get('name')) + "'"));
      }
    };

    FormArray.prototype.create = function() {};

    FormArray.prototype.add = function() {
      this.model.push('value', void 0);
      return this.model.set('addItem', !this.model.get('addItem'));
    };

    FormArray.prototype.remove = function(item) {
      if (!item) {
        return;
      }
      return item.parent().remove(item.leaf());
    };

    return FormArray;

  })(require('../input'));

}).call(this);
