_ = require 'lodash'
util = require 'dm-util'

STRIPE_SCRIPT_URL = 'https://checkout.stripe.com/checkout.js'

module.exports = class Stripe
  view: require './index.jade'
  name: 'dm-stripe'

  init: ->
    @options = @model.scope('_session._plugins.stripe')

  _getParams: ->
    params = {}
    params.name = @getAttribute('name') || 'Stripe'
    params.description = @getAttribute('description') || 'Buy'
    params.description = params.description.replace /<br>/g, ' '
    params.type = @getAttribute('type')
    params.meta = _.cloneDeep(@getAttribute('meta')) || {}
    params.price = Number(@getAttribute('price')) || undefined
    params.price ?= @options.get('plans')?[params.type]
    console.error 'No payment price specified' unless params.price
    params

  create: ->
    util.getScript STRIPE_SCRIPT_URL, @_preparePayment.bind(@)

  _preparePayment: ->
    return console.error 'Missing StripeCheckout object' unless StripeCheckout?
    # Pipe token to server after obtaining a valid card
    @handler ?= StripeCheckout.configure
      key: @options.get('publishable')
      token: (token, args) =>
        # This can execute only after @_open() so @params will be present
        params = _.cloneDeep @params
        payUrl = @options.get('url')
        util.ajax.post payUrl, _.merge({token}, params), (data) =>
          console.log data
          @emit 'paid', params, data

  open: ->
    util.getScript STRIPE_SCRIPT_URL, @_open.bind(@)

  _open: ->
    return console.error 'Missing stripe handler' unless @handler
    email = @_getEmail()
    @params = @_getParams()

    @handler.open
      name: @params.name
      email: email
      description: @params.description
      amount: Math.round(@params.price * 100)

  _getEmail: ->
    userId = @model.root.get('_session.userId')
    if @model.root.get('auths.' + userId)
      user = @model.scope('auths.' + userId)
    else if @model.root.get('users.' + userId)
      user = @model.scope('users.' + userId)
    else
      return
    user.get('emails.0') || user.get('email') || user.get('local.email')